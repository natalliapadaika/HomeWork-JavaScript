// Задание 10

// Написать функцию, которой на вход подается строка, на выход она дает символы наоборот (разворачивает строку). Пример: «привет, Женя» -> «янеЖ ,тевирп»

// Обратите внимание: метод reverse существует только у массивов.

let str = '«привет, Женя»';

// let reverseStr = (str) => {

// return str.split('').reverse().join('');
 
// };


let reverseStr = str => str.split('').reverse().join('');

console.log(reverseStr(str));

// Задание 11

// Массив содержит строки с информацией о железнодорожных станциях на севере Англии. Строки представляют собой трёхбуквенный код станции, затем некоторые машиночитаемые данные, за которыми следует точка с запятой, а затем название станции, пригодное для чтения человеком. 

let stations = [

    'MAN675847583748sjt567654;Manchester Piccadilly',
    
    'GNF576746573fhdg4737dh4;Greenfield',
    
    'LIV5hg65hd737456236dch46dg4;Liverpool Lime Street',
    
    'SYB4f65hf75f736463;Stalybridge',
    
    'HUD5767ghtyfyr4536dh45dg45dg3;Huddersfield'
    
    ];
    
    // Необходимо извлечь код станции и имя и поместить их в строку со следующей структурой:
    
    // MAN: Manchester Piccadilly
    
    // Вывести эти строки в консоль
    
    // ПОДСКАЗКА:
    
    // 1. Извлеките трёхбуквенный код станции и сохраните его в новой переменной.
    // 2. Найдите номер символьного номера точки с запятой.
    // 3. Извлеките название для чтения человеком, используя номер индекса точки с запятой в качестве контрольной точки и сохраните его в новой переменной.
    // 4. Объедините две новые переменные и строк
    
    // let codNames = stations.map ((item) => {
    //    return item.substr(0, 3) +': ' + item.slice((item.indexOf(';') + 1));
    
    // });
    
    let codNames = stations.map (item => item.substr(0, 3) +': ' + item.slice((item.indexOf(';') + 1)));
    
    console.log(codNames);

//     Задание 12

// Напишите функцию unique(arr), которая принимает массив, а возвращает новый массив, содержащий только уникальные элементы arr.
// Пример:
// let strings = ["кришна", "кришна", "харе", "харе", "харе", "харе", "кришна", "кришна", ":-O"];
// console.log(unique(strings) ); должен вывести "кришна, харе, :-O"

// ПОДСКАЗКА
// - создать новый массивы
// - обойти исходный массив, если элемент отсутствует в новом - добавлять его в новый. Таким образом в новый добавятся только уникальные.

let strings = ["кришна", "кришна", "харе", "харе", "харе", "харе", "кришна", "кришна", ":-O"];

// эта задача у меня не получалась долго, и я ее подсмотрела в материалах которые шли к уроку в учебнике, поменяла цикл и немного написание условия..... не могла додуматься, что  условие if может работать без else корректно, все пыталась туда вернуть результат и было undefined.... и пыталась решить через find(), но видимо тут нельзя применить.... 


let unique = strings => {
    const  newStrings = [];

    strings.forEach(element => {
 
 if (newStrings.includes(element) !== true) {
   newStrings.push(element);
 } 

}); return newStrings;
}; 

console.log(unique(strings));  



// Задание 14

// Решить 4 задание из прошлой темы, используя метод filter

// Определить массив, например let arr = [5, 4, 3, 8, 0];
// Создать функцию filterFor(arr, a). Функция должна вернуть новый массив из элементов arr, но в нем должны содержаться элементы, которые больше или равны (>=) значения переменной a.
// Например, запуск функции filterFor(arr, 5) дает результат [5,8]
// запуск функции filterFor(arr, 10) дает результат []
// запуск функции filterFor(arr, 3.11) дает результат [4,5,8]

let arr = [5, 4, 3, 8, 0];

// let filterFor = (arr, a) => arr.filter((item) =>{
//     const newArr = item >= a;
//     return newArr;

// }); или

let filterFor = (arr, a) => newArr = arr.filter (item => item >= a);
   
 
 console.log(filterFor(arr, 8));

//  Задание 15

// Описать функцию, которая принимает массив строк и возвращает массив, содержащий только строки более 3-х символов. Проверить работу функции на примере:  ['yes', 'hello', 'no', 'easycode', 'what'].

let words = ['yes', 'hello', 'no', 'easycode', 'what']

 
let filterForWords = (words) => newWords = words.filter  (item => item.length > 3);

console.log(filterForWords(words));

// Задание 16

// Отсортируйте массив массивов так, чтобы вначале располагались наименьшие массивы (размер массива определяется его длиной): [ [14, 45], [1], ['a', 'c', 'd'] ] → [ [1], [14, 45], ['a', 'c', 'd'] ]

// ПОДСКАЗКА. Для правильной сортировки метод sort принимает функцию, параметры которой a и b - это элементы массива. В данной задаче элементы массива, то есть параметры a и b, сами являются массивами и обладают всеми свойствами массивов.

let arrNum = [ [14, 45], [1], ['a', 'c', 'd'] ];

const sortedArrNum = arrNum.sort((a, b) => a.length - b.length);
console.log(sortedArrNum);


// Задание 17

// Создайте функцию getAverageHumanAge, которая принимает массив возрастов кошек (catAges) и выполняет следующие действия по порядку:

// 1. Рассчитывает человеческий возраст по следующей формуле: если возраст кошки <= 2 года, человеческий возраст = возраст кошки * 10. Если кошке больше 2 лет, человеческий возраст = возраст кошки * 7. (сделать через map)
// 2. Исключает всех кошек младше 18 человеческих лет. (сделать через filter)
// 3. Возвращает средний человеческий возраст для всех взрослых кошек. (сумму для среднего посчитать через reduce)
// Вызовите функцию для обоих наборов тестовых данных.
// Тестовые данные:
// 1: [7 , 3, 2, 4, 1, 15, 8, 1, 9, 2]
// 2: [1, 16, 12, 4, 5, 1, 3, 11, 7, 2]

// В задании необходимо использовать методы массивов: map, filter, reduce


let getAverageHumanAge = (catAges) => {
    
manAge = catAges.map((item) => item <= 2? item * 10 : item * 7);
oldManAge = manAge.filter(item => item > 18);
sum = oldManAge.reduce ((acc, item) => acc + item, 0);
return averageHumanAge = sum / oldManAge.length;

};


console.log(getAverageHumanAge([7 , 3, 2, 4, 1, 15, 8, 1, 9, 2]));
console.log(getAverageHumanAge([1, 16, 12, 4, 5, 1, 3, 11, 7, 2]));

// Задание 1

// Примените каждый из этих методов округления к трем числам: 5.4, 5.5, 5.6:

// Math.round(x)

// Math.ceil(x)
// Math.floor(x)

// В комментариях к каждой строке напишите, как работают эти округления.

console.log(Math.round(5.4)); 
console.log(Math.round(5.5));
console.log(Math.round(5.6)); // округление к целому в зависимости от показателя десятичной дроби

console.log(Math.ceil(5.4));
console.log(Math.ceil(5.5));
console.log(Math.ceil(5.6)); // округление к целому большему вне зависимости от показателя десятичной дроби


console.log(Math.floor(5.4));
console.log(Math.floor(5.5));
console.log(Math.floor(5.6)); // округление к целому иеньшему вне зависимости от показателя десятичной дроби

// Задание 2

// Выведите в консоль фразы в 2 строки:

// Сегодня 27 октября 2022 (здесь будет ваша дата) - используйте options для вывода месяца словом

// 19 часов 20 минут (здесь будет ваше время) - используйте шаблонную строку, в которую подставьте значения с помощью методов getHours() и getMinutes()


let now = new Date();
let options = {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
}
 
console.log(`Сегодня ${now.toLocaleString('ru-Ru', options)}`);
let hours = now.getHours();
let minutes = now.getMinutes();

console.log(`${hours} часов ${minutes} минут`);
